[package]
name = "barter"
version = "0.8.16"
authors = ["Just A Stream <93921983+just-a-stream@users.noreply.github.com>"]
edition = "2021"
license = "MIT"
documentation = "https://docs.rs/barter/"
repository = "https://github.com/barter-rs/barter-rs"
readme = "README.md"
description = "Framework for building event-driven live-trading & backtesting engines"
keywords = ["trading", "backtesting", "crypto", "stocks", "investment"]
categories = ["accessibility", "simulation"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dev-dependencies]
tracing-subscriber = { workspace = true, features = ["env-filter", "json"] }
rust_decimal_macros = { workspace = true }

[dependencies]
# Barter Ecosystem
barter-integration = { path = "../barter-integration", version = "0.7.4" }
barter-instrument = { path = "../barter-instrument", version = "0.1.0" }
barter-data = { path = "../barter-data", version = "0.9.0" }

# Logging
tracing = { workspace = true }

# Async
tokio = { workspace = true, features = ["sync"] }
tokio-stream = { workspace = true, features = ["sync"] }
futures = { workspace = true }
async-trait = { workspace = true }
pin-project = { workspace = true }

# Error
thiserror = { workspace = true }

# SerDe
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }

# Data Structures
rust_decimal = { workspace = true }
smol_str = { workspace = true }
fnv = { workspace = true }
vecmap-rs = { workspace = true, features = ["serde"] }
indexmap = { workspace = true, features = ["serde"]}

# Strategy
ta = { workspace = true }

# Misc
uuid = { workspace = true, features = ["v4", "serde"] }
chrono = { workspace = true, features = ["serde"]}
parking_lot = { workspace = true }
derive_more = { workspace = true, features = ["constructor", "from", "display"]}
prettytable-rs = "0.10.0"
itertools = { workspace = true }
